TODOs

Each command additions requires the following tasks:

	1. Creation of DTO
	2. Creation of Serializer
	3. Addition to command switch case.
	4. Addition of command service method
	5. Addition of executing service class or method-on-existing-service.
	6. Determination and usage of undo operation.
	
AOP Design: When an Aspect join point executes, the executed methods, params and values (MPVs) will collect in an accumulator.
To create an accumulation of undo operations, call the undo method but in the advice prevent execution of the undo operation. Instead just log the action.
Status: Done
	
Tasks:

	Create Rollback Actions for AddOrbType. - Done
	Add delete instances when deleting type - Done
	Add/Delete attribute - Done 
	Add/Delete/Update Query -
	Add/Delete/Update Constraint -


Given a called command in execution
When command 1 calls command 2
Then command 2 should add to the accumulating actions
And command 2 should add to the accumulating undos.
Status: Done.
	
Given a called command in execution
When command 1 calls command 2
And command 2 throws an exception
Then 1 *and* 2 should roll back.
Status:

Restore mode should be handled at the system level, not the action command level.
Status: 

Add spock class paths to integration command line gradle test.
Status: Done.

Test compile time weaving.
Status: Done.

Get eclipse Aspect J plugin to work.
Status: Deferred until needed.

Add test in JsonWrapper for Collections where the element type in the collection is tested to see if it can be serialized.

Fix 'testDeleteInstance' in Spock integration test.
Status: Done

Add rollback of removeAttribute test with 100 instances
Status: Done

Add procedures to remove orphaned instances and orphaned reference collection items. Go through OTM and OM with fine toothed comb.
Test: Remove orb type with 100 instances and each instance has a reference. 
Test Result: All instances and references removed. 
Status: Almost done. Need to fix deleteOrbType to properly log deleted orbs and attributes.

Modify change orbType attribute name to also change all references of that name.
Status: Done.

Fix rollback of deleteAttribute;
Status: Done

Determine impact of DirectInvocation operations not having same tranDate as transaction/log operations.
Status: Not done.

Fix 'test delete instance with references'
Status: Done.

Ensure that when attribute is delete all arrows pointing at attribute are set to null (in addition to removing reference).
Status: Done.

Cache creation of queries/query objects.
Status: Done.

Create lookup of attribute index in OrbTypeManager to make setAttribute and other things faster.
Status: Not done.

Add OrbType to constraintDetail so passing it in is unnecessary.
Status: Done.

Make Criteria use label instead of orbinternalId?
Status: Not done.

Optimize CriteriaSpec test to set up data once.
Status: Done.

Modify Queries collection when the following occurs:
	Delete orb - Done.
	Delete attribute - Done.
	Remove attribute - Done.
	
Finish delete dependencies boolean add to all delete methods.
Status: Done.

Fix deleteQuery which calls both deleteOrb and removeQuery. Should not call removeQuery.
Status: Done.

Finish execute query by label returning resultSet.
Status: Done.

Rename "deleteAll" to "nukeAll"
Status: Done.

Add column list to Criteria
Status: Not done.

Add cacheing to CriteriaGrinder. Cache queries based on last update of flag based on orbType.
Status: Not done.

Create tests for QueryAttributeRenameHandler
Status: Done.

Refactor/Extract attributeDeleteHandler to external class (from QueryManager)
Status: Done.

Create tests for attributeDeleteHandler
Status: Done.

Fix delete query on dependencies delete flag == true such that when query is deleted, the processing on it stops.
Status: Done.

Add Uniqeuness index constraint for Query instance Label;
Status: Not done.

Add executeQuery that returns only one result; if over one throw exception.
Status: Done.

Cache constructed Grinder. Replace when query updated.
Status: Not done.

Verify that we should keep checks for LogicalConstraint in methods like 'hasAttribute' in QueryAttributeDeleteHandler.
Status: Not done.

Add in-orb validation/support for query scan validations including unique constraint
Status: Not done.

Add List<Orb> Comparator See QueryManager.findDistinctByAttribute.
Status: Done.

Add uniqueResult() to criteria;
Status: Not done.

Add index initializer in initialization method for each designer object.
Status: Not done.

Test putting logging and rollback into before and after methods;
Status: Not done.

When resetting reference to orb, do not set to null - remove from list if ref value is multi-ref list.
Status: Not done.
