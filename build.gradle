apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse-wtp'

eclipse {
	classpath {
		downloadSources = true
	}
}

configurations {
	ajc
	aspects
	aspectCompile
	compile { extendsFrom aspects }
}

version = '1.0'
jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart',
		'Implementation-Version': version
	}
}

repositories { mavenCentral() }

sourceSets {
	integrationTest {
		java {
			srcDirs = ['src/integration/java', 'src/test/java'] //, 
			excludes = ['**/AllIntegrationTests.java']
		}
		groovy { srcDirs = ['src/integration/groovy']}
		resources { srcDirs = ['src/unit/resources']}
	}
	main {
		java {
			srcDirs = ['src/main/java', 'src/unit/java']
		}
		resources.srcDir file('src/main/resources')
	}
	test {
		java {
			srcDirs = ['src/unit/java', 'src/test/java']
			excludes = ['**/AllTests.java']
		}
		groovy { srcDirs = ['src/unit/groovy']}
		resources.srcDir file('src/unit/resources')
	}
}

task(debug) << {
	println System.properties['java.home']

	configurations.compile.each { println it }
}

dependencies {
	compile('ch.qos.logback:logback-classic:1.1.2') {
		force = true
	}
	compile 'org.codehaus.groovy:groovy-all:2.3.10' 
	compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile 'org.slf4j:slf4j-api:1.7.7'
	compile 'org.eclipse.jetty:jetty-server:9.3.0.M0'
	compile 'redis.clients:jedis:2.6.1'
	compile group: 'junit', name: 'junit', version: '4.11'
	compile 'org.springframework:spring-context:4.1.3.RELEASE'
	compile 'org.springframework:spring-test:4.1.3.RELEASE'
	compile 'org.springframework:spring-web:4.1.3.RELEASE'
	compile 'org.springframework:spring-aop:4.1.3.RELEASE'
	compile 'joda-time:joda-time:2.6'
	compile 'mysql:mysql-connector-java:5.1.34'
	compile 'org.codehaus.groovy:groovy-backports-compat23:2.4.0-rc-2'
	compile 'com.google.code.gson:gson:2.3.1'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'cglib:cglib-nodep:3.1'
	compile 'com.googlecode.cqengine:cqengine:2.0.3'
	compile 'org.aspectj:aspectjrt:1.8.5'
	compile 'org.javassist:javassist:3.20.0-GA'
	providedCompile 'javax.servlet:servlet-api:2.5'

	ajc 'org.aspectj:aspectjtools:1.8.5'
	
	runtime 'javax.servlet:jstl:1.1.2'

	compile 'com.googlecode.junit-toolbox:junit-toolbox:2.0'
	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
	testCompile 'org.aspectj:aspectjrt:1.8.5'
	testCompile 'org.aspectj:aspectjtools:1.8.5'
	testCompile "org.aspectj:aspectjweaver:1.8.4"

	integrationTestCompile sourceSets.main.output
	integrationTestCompile configurations.testCompile
	integrationTestCompile sourceSets.test.output
	integrationTestRuntime configurations.testRuntime
	
	
}

def testLoggingDefault = {
	// Show that tests are run in the command-line output
	events 'started', 'passed', 'standardOut'
	showStandardStreams true
}

test {
	jvmArgs '-javaagent:C:/Users/ninjapop/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.8.4/2ee166facba0b05c5dc444a934027baa114fddd9/aspectjweaver-1.8.4.jar'
	
	testLogging
	testLoggingDefault
}

task integrationTest(type: Test) {
	jvmArgs "-javaagent:C:/Users/ninjapop/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.8.4/2ee166facba0b05c5dc444a934027baa114fddd9/aspectjweaver-1.8.4.jar"
	
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath

	testLogging
	testLoggingDefault
}

check.dependsOn integrationTest

/**
 * Configure jettyRun, jettyRunWar and jettyStop tasks.
 */
[jettyRun]*.jettyEnvXml = file('src/main/resources/jetty-env.xml')
httpPort = 8080
stopPort = 9080
stopKey = "stopKey"
