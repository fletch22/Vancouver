apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

eclipse {
	classpath {
	   downloadSources=true
	}
}

version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

sourceSets {
	integrationTest {
		java.srcDir file('src/integration/java')
		resources.srcDir file('src/integration/resources')
	}
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	compile 'org.slf4j:slf4j-api:1.7.7'
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'org.eclipse.jetty:jetty-server:9.3.0.M0'
	compile 'redis.clients:jedis:2.6.1'
    compile group: 'junit', name: 'junit', version: '4.+'
	compile 'org.springframework:spring-context:4.1.3.RELEASE'
	compile 'org.springframework:spring-test:4.1.3.RELEASE'
	compile 'joda-time:joda-time:2.6'
	testCompile 'org.spockframework:spock-maven:0.7-groovy-2.0'
	
	integrationTestCompile sourceSets.main.output
	integrationTestCompile configurations.testCompile
	integrationTestCompile sourceSets.test.output
	integrationTestRuntime configurations.testRuntime
}

def testLoggingDefault = {
	// Show that tests are run in the command-line output
	events 'started', 'passed'
	showStandardStreams true
}

test {
	testLogging testLoggingDefault
}

task integrationTest(type: Test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	
	testLogging testLoggingDefault
}

check.dependsOn integrationTest